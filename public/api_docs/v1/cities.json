{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://cities-service-development.herokuapp.com/api/v1",
  "apis": [
    {
      "path": "/cities.json",
      "operations": [
        {
          "summary": "Fetches all cities",
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            }
          ],
          "method": "get",
          "nickname": "Cities#index"
        }
      ]
    },
    {
      "path": "/cities.json",
      "operations": [
        {
          "summary": "Creates a new city",
          "parameters": [
            {
              "paramType": "form",
              "name": "city",
              "type": "City",
              "description": "Name (unique) of the city to be created",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "post",
          "nickname": "Cities#create"
        }
      ]
    },
    {
      "path": "/cities/{id}.json",
      "operations": [
        {
          "summary": "Fetches a single city by its ID",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "City ID",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "method": "get",
          "nickname": "Cities#show"
        }
      ]
    },
    {
      "path": "/cities/{id}.json",
      "operations": [
        {
          "summary": "Updates an existing city referenced by its ID",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "City ID",
              "required": true
            },
            {
              "paramType": "form",
              "name": "city",
              "type": "City",
              "description": "The city's new data",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "patch",
          "nickname": "Cities#update"
        }
      ]
    },
    {
      "path": "/cities/{id}.json",
      "operations": [
        {
          "summary": "Updates an existing city referenced by its ID",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "City ID",
              "required": true
            },
            {
              "paramType": "form",
              "name": "city",
              "type": "City",
              "description": "The city's new data",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "put",
          "nickname": "Cities#update"
        }
      ]
    },
    {
      "path": "/cities/{id}.json",
      "operations": [
        {
          "summary": "Deletes an existing city referenced by its ID",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "ID of the city to delete",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "delete",
          "nickname": "Cities#destroy"
        }
      ]
    },
    {
      "path": "/cities/{id}/nearby.json?within={within}",
      "operations": [
        {
          "summary": "Finds cities nearby another city referenced by its ID",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "ID of the city of reference",
              "required": true
            },
            {
              "paramType": "query",
              "name": "within",
              "type": "integer",
              "description": "Number of miles around the reference city to look for other cities; 15 miles is the default",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "method": "get",
          "nickname": "Cities#nearby"
        }
      ]
    },
    {
      "path": "/cities/in_country/{country}.json",
      "operations": [
        {
          "summary": "Finds cities in a given country",
          "parameters": [
            {
              "paramType": "path",
              "name": "country",
              "type": "string",
              "description": "country name in which to look for cities",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            }
          ],
          "method": "get",
          "nickname": "Cities#nearby"
        }
      ]
    }
  ],
  "resourcePath": "/cities",
  "models": {
    "City": {
      "id": "City",
      "required": [
        "name",
        "state",
        "country"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name (unique in a state and country) of the city."
        },
        "state": {
          "type": "string",
          "description": "Name of the city's state."
        },
        "country": {
          "type": "string",
          "description": "Name of the city's country."
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "Latitude the city."
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "Longitude the city."
        }
      },
      "description": "A city object."
    }
  }
}
